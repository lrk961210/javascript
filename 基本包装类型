### 基本包装类型

基本类型值不是对象，它在使用对象相关的属性和方法的时候，系统会在后台模拟相关的操作，例如
执行
var s1 = "some text";
var s2 = s1.substring(2);  <---这一句

后台
var s1 = new String("some text");
var s2 = s1.substring(2);
s1 = null; 


typeof 返回 object

Object 构造函数也会像工厂方法一样，根据传入值的类型返回相应基本包装类型的实例。例如：
var obj = new Object("some text");
alert(obj instanceof String); //true 

#### Boolean类型
valueOf()返回 true 或false
toString()返回 "true"和"false"。

基本类型与引用类型的布尔值
alert(typeof falseObject); //object
alert(typeof falseValue); //boolean
alert(falseObject instanceof Boolean); //true
alert(falseValue instanceof Boolean); //false

#### Number类型
valueOf() 返回基本类型的数值
toLocaleString()和 toString() 返回字符串形式数值

var num = 10;
alert(num.toString()); //"10"
alert(num.toString(2)); //"1010"
alert(num.toString(8)); //"12"
alert(num.toString(10)); //"10"
alert(num.toString(16)); //"a"

toFixed()方法
var num = 10;
alert(num.toFixed(2)); //"10.00" 

#### String类型

charAt()和 charCodeAt()
var stringValue = "hello world";
alert(stringValue.charAt(1)); //"e" 

concat()
var string1 = "hello ";
var result = string1.concat("world", "!");
alert(result); //"hello world!"
alert(string1); //"hello" 

slice()、substr()和 substring()
var stringValue = "hello world";
alert(stringValue.slice(3));       //"lo world"
alert(stringValue.substring(3));   //"lo world"
alert(stringValue.substr(3));      //"lo world"
alert(stringValue.slice(3, 7));    //"lo w"     [3,7)
alert(stringValue.substring(3,7)); //"lo w"     [3,7)
alert(stringValue.substr(3, 7));   //"lo worl"  [3,3+7)

slice()方法     负值与字符串的长度相加，
substr()方法    负的第一个参数加上length，而将负的第二个换为 0。
substring()方法 都转换为 0。

indexOf()和 lastIndexOf()
var stringValue = "hello world";
alert(stringValue.indexOf("o")); //4
alert(stringValue.lastIndexOf("o")); //7 
//第二个参数表示从哪个位置开始
var stringValue = "hello world";
alert(stringValue.indexOf("o", 6)); //7
alert(stringValue.lastIndexOf("o", 6)); //4 

trim()返回 去除前后空格的字符串

字符串的模式匹配方法 match（）
var text = "cat, bat, sat, fat";
var pattern = /.at/;
//与 pattern.exec(text)相同
var matches = text.match(pattern);
alert(matches.index); //0
alert(matches[0]); //"cat"
alert(pattern.lastIndex); //0 
