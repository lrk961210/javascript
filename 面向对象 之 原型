对象有一个 constructor 属性 指向 构造函数(使用字面量初始化会指向object，加constructor字段可以改，此时改了friend.constructor和Person.prototype.constructor)
找对象某个属性的时候，先找对象里面，再找原型（字面量改了原型会有俩个原型，改之前的对象不会发生变化，改之后用新的）
检测对象可以利用，但还是instanceof靠谱

构造函数当成普通函数调用没有返回值（undefined）

call与apply：定义this的值

函数 都有 prototype 属性  （指向 原型，包含所有实例可共享的东西）
原型 都有 constructor 属性，指向 构造函数
实例 包含一个无法访问的指针 ，指向 原型

对象 -> 原型 <--> 构造函数  (毕竟对象有多个，指针指不过来)
    ------------->

    
对象上定义的属性会屏蔽原型的属性，delete删除后可恢复访问
person1.hasOwnProperty（“name”）;非原型属性
“name” in person1；属性

for（var prop in person）{
  //可枚举属性
}

